Tests for Python 0x07 Task 1
============================

>>> div = __import__('2-matrix_divided').matrix_divided

Standard Case: size 2 matrix of integers and div is integer
---
>>> matrix = [[4, 8, 12], [40, 60, 36]]
>>> print(div(matrix, 4))
[[1.0, 2.0, 3.0], [10.0, 15.0, 9.0]]
>>> print(matrix)
[[4, 8, 12], [40, 60, 36]]

Standard Case: size 5 matrix of floats and div is float
---
>>> matrix = [[4.5], [2.5], [6.2], [30.9], [7.1]]
>>> print(div(matrix, 1.5))
[[3.0], [1.67], [4.13], [20.6], [4.73]]
>>> print(matrix)
[[4.5], [2.5], [6.2], [30.9], [7.1]]

Standard Case: size 3 matrix of integers and div is float
---
>>> matrix = [[4, 5], [6, 7], [8, 9]]
>>> print(div(matrix, 0.5))
[[8.0, 10.0], [12.0, 14.0], [16.0, 18.0]]
>>> print(matrix)
[[4, 5], [6, 7], [8, 9]]

Errors: TypeErrors, ZeroDivisionErrors, others
---
>>> matrix = "Batman"
>>> div(matrix, 6)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [1, 2, 3]
>>> div(matrix, 3.14)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2], [2, 3]]
>>> div(matrix, (3, 5))
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> div(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix = [[1], [1, 2]]
>>> div(matrix, 4)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
